package _2024_09_05;

public class TodayStudy {
    public static void main(String[] args) {
        // 메모리사용영역
        // JVM의 메모리는 heap, stack, static 영역으로 이루어짐
        // heap
        // 객체나 배열이 생성됨
        // stack영역이나 다른 객체들에 의해 참조
        // 참조하는 변수가없다면 쓰레기값 - JVM이 쓰레기 객체를 자동으로 제거
        // 개발자가 조정가능한 영역
        // stack
        // 메소드를 호출할 때마다 처리할 작업을 추가하고 메소드가 종료되면 해당작업을 제거하는 동작을 수행
        // 기본자료형, 지역변수, 매개변수가 저장
        // static
        // Java프로그램이 실행될 때, 클래스와 관련된 정보가 저장되는 영역
        // JVM이 시작할 때 생성, 모든 스레드가 공유하는 영역
        //
        // null
        // heap영역의 객체를 참조하지않는다는 뜻
        // null로 초기화된 참조변수는 스택영역
        // NPE오류
        // 참조할 객체가 없을 때 발생
        // null을 선언하고 특정값을 바로 할당해 줄 때만 사용하자
        //
        // 객체지향프로그래밍
        // 객체들을 먼저 만들고, 하나씩 조립하여 완성된 프로그램을 개발
        // 캡슐화
        // 클래스안에 서로 연관있는 속성과 기능을 하나의 캡슐로
        // 데이터보호와 데이터 은닉의 장점이있음
        // 다형성
        // 객체의 속성,기능이 상황에 따라 여러가지 형태를 가질수있음
        // 상위 클래스타입의 참조 변수로 그것과 관계있는 하위 클래스를 참조할 수 있음.
        //
        // 클래스
        // 객체의 속성,기능을 정해놓은 설계도
        // 필드, 생성자, 메소드로 구성
        // instance
        // 클래스에 정의된 대로 만들어진 실체
    }
}